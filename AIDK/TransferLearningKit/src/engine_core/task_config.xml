<?xml version="1.0" encoding="utf-8" ?>
<xml>
    <global comment="global config">
        <seed comment="random seed">0</seed>
        <debug_mode comment="debug mode, which will be much slower and more informative">0</debug_mode>
        <model_dir comment="where to store trained model">../model</model_dir>
        <logging comment="logger config">
            <dir comment="where to store logging">../log</dir>
            <level comment="higher than this level will be output">INFO</level>
        </logging>
        <tensorboard comment="tensorboard config">
            <dir comment="where to store tensorboard log">../tensorboard_log</dir>
        </tensorboard>
    </global>
    <task comment="task config">
        <classification name="Office31 Webcam transfer to amazon" comment="classification task config">
            <num_classes comment="num classes" required="1">31</num_classes>
        </classification>
    </task>
    <transforms comment="data augmentation config">
        <transform comment="transform, must be an expression. 'all' for all dataset. 'training' for training." domain_type="all" training_type="training">
        transforms.Compose([
                transforms.Resize(224),
                transforms.RandomRotation(degrees=(0, 180)),
                transforms.ColorJitter(brightness=0.5,hue=0.3),
                transforms.ToTensor(),
                transforms.Normalize(
                mean=[0.485, 0.456, 0.406],
                std=[0.229, 0.224, 0.225])])
        </transform>
        <transform comment="transform, must be an expression. 'all' for all dataset. 'inferring' for training." domain_type="all" training_type="inferring">
             transforms.Compose([
                transforms.Resize(224),
                transforms.ToTensor(),
                transforms.Normalize(
                mean=[0.485, 0.456, 0.406],
                std=[0.229, 0.224, 0.225])])
        </transform>
    </transforms>
    <datasets comment="dataset config">
        <num_worker comment="dataset worker num">1</num_worker>
        <batch_size comment="batch size"> 16 </batch_size>
        <dataset name="Office31_webcam_train" type="train_source" formatter="Office31" required="1" comment="specific dataset">
            <data comment="data location" required="1">/home/vmagent/app/dataset/webcam</data>
            <label comment="label location" required="1">/home/vmagent/app/dataset/label_map.txt</label>
            <img_mode comment="img mode, could be L or RGB">RGB</img_mode>
        </dataset>
        <dataset name="Office31_amazon_train" type="train_target" formatter="Office31" required="1" comment="specific dataset">
            <data comment="data location" required="1">/home/vmagent/app/dataset/amazon</data>
            <label comment="label location" required="1">/home/vmagent/app/dataset/label_map.txt</label>
            <img_mode comment="img mode, could be L or RGB">RGB</img_mode>
        </dataset>
    </datasets>
    <training comment="training config">
        <backbone_lr comment="backbone learning rate">0.01</backbone_lr>
        <backbone_weight_decay comment="backbone training weight decay for SGD">0.0005</backbone_weight_decay>
        <backbone_momentum comment="backbone training momentum for SGD">0.9</backbone_momentum>
        <discriminator_lr comment="discriminator learning rate">0.01</discriminator_lr>
        <discriminator_weight_decay comment="discriminator training weight decay for SGD">0.0005</discriminator_weight_decay>
        <discriminator_momentum comment="discriminator training momentum for SGD">0.9</discriminator_momentum>
        <epochs comment="training epoch num">20</epochs>
        <log_interval comment="log interval (iteration) in training">10</log_interval>
        <target_label_enable comment="enable target labels as supervised info when training">0</target_label_enable>
       <earlystopping_tolerance comment="earlystop when the verification metric does not improve within this number of epoch">3</earlystopping_tolerance>
       <earlystopping_delta comment="difference less than this value will be considered equal">0.00001</earlystopping_delta>
    </training>
    <network comment="network structure config">
        <backbone comment="backbone config" required="1">
            <predefined name="resnet18" comment="predifined backbone">
                <pretrained comment="backbone pretrained">
                    <path comment="pretrained model path">/home/vmagent/app/pretrained_model/resnet18.pth</path>
                    <layer_pattern comment="which layer to pretraining">^[^f]</layer_pattern>
                </pretrained>
            </predefined>
        </backbone>
        <discriminator comment="discriminator config" required="1">
<!--                <adversarial name="CDAN" comment="adversarial-based transfer learning config">-->
<!--                    <input_size comment="input dimension">500</input_size>-->
<!--                    <hidden_size comment="hidden layer dimension">500</hidden_size>-->
<!--                    <dropout comment="dropout rate">0.0</dropout>-->
<!--                    <enable_random_layer comment="whether enable random layer, see CDAN paper">1</enable_random_layer>-->
<!--                    <enable_entropy_weight comment="whether enable entropy weight, see CDAN paper">1</enable_entropy_weight>-->
<!--                    <backbone_output_size comment="backbone output size">10</backbone_output_size>-->
<!--                    <grl_coeff_alpha comment="alpha to control shape of coeff which is used for gradient rever layer">1</grl_coeff_alpha>-->
<!--                    <grl_coeff_high comment="alpha to conftrol max value of coeff which is used for gradient rever layer">0.1</grl_coeff_high>-->
<!--                </adversarial>-->
            <adversarial name="DANN" comment="adversarial-based transfer learning config">
                <input_size comment="input dimension" required="1">512</input_size>
                <hidden_size comment="hidden layer dimension" required="1">256</hidden_size>
                <dropout comment="dropout rate">0.0</dropout>
                <grl_coeff_alpha comment="alpha to control shape of coeff which is used for gradient rever layer">1</grl_coeff_alpha>
                <grl_coeff_high comment="alpha to control max value of coeff which is used for gradient rever layer">0.1</grl_coeff_high>
            </adversarial>
        </discriminator>
    </network>
</xml>


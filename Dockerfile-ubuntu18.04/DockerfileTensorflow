# Dockerfile for tensorflow env
# Used in ModelZoo: wnd/dien

FROM intel/oneapi-aikit:2021.4-devel-ubuntu18.04

SHELL ["/bin/bash", "-c"]
ENV http_proxy=http://child-prc.intel.com:913
ENV https_proxy=http://child-prc.intel.com:913
WORKDIR /root/
ENV PATH /opt/intel/oneapi/intelpython/latest/condabin:$PATH
RUN apt-get update -y && apt-get install -y git gcc-8 g++-8 \
        && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-7 7 \
        && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 8 \
        && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-7 7 \
        && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-8 8
SHELL ["conda", "run", "-n", "tensorflow", "/bin/bash", "-c"]

# install dependendies
RUN python -m pip install --no-cache-dir --ignore-installed psutil sklearn \
        tqdm prefetch_generator absl-py pydot dill typing-extensions~=3.7.4 \
        six~=1.15.0 h5py~=3.1.0 grpcio~=1.34.0 tensorflow-transform==1.1.0 \
        tensorflow-metadata==1.1.0

# install horovod
RUN source /opt/intel/oneapi/setvars.sh --ccl-configuration=cpu_icc --force \
        && conda activate tensorflow && HOROVOD_WITHOUT_MPI=1 HOROVOD_CPU_OPERATIONS=CCL \
        HOROVOD_WITHOUT_MXNET=1 HOROVOD_WITHOUT_PYTORCH=1 HOROVOD_WITH_TENSORFLOW=1 \
        python -m pip install --no-cache-dir horovod

# install sigopt
RUN python -m pip install --no-cache-dir --ignore-installed sigopt==7.5.0
# install tpcxai_uc09 required dependencies
RUN python -m pip install fsspec typeguard opencv-python pandas diskcache packaging pyzmq
RUN python -m pip install tensorflow-addons==0.15.0 --no-deps
RUN python -m pip install petastorm --no-deps
RUN python -m pip install future

# for test
RUN python -m pip install pytest

SHELL ["conda", "run", "-n", "base", "/bin/bash", "-c"]
RUN python -m pip install  --no-cache-dir --ignore-installed sigopt==7.5.0
RUN python -m pip install transformers pandas

SHELL ["/bin/bash", "-c"]

RUN apt-get update -y && apt-get install -y openssh-server vim nano git \
            rsync wget curl gcc g++ build-essential pkg-config zlib1g-dev \
            zip unzip numactl flex ncurses-term python3 python3-pip
RUN sed -i 's/#Port 22/Port 12346/g' /etc/ssh/sshd_config
RUN sed -i 's/#   Port 22/    Port 12346/g' /etc/ssh/ssh_config
RUN mkdir /root/.ssh
COPY id_rsa /root/.ssh/id_rsa
RUN ssh-keygen -y -f /root/.ssh/id_rsa > /root/.ssh/id_rsa.pub
RUN cat /root/.ssh/id_rsa.pub > /root/.ssh/authorized_keys
RUN chmod 600 /root/.ssh/authorized_keys

RUN conda init bash
ENTRYPOINT [""]